# Generated by Django 2.2.8 on 2019-12-04 11:55

from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('actions', '0035_migrate_actiontask_states'),
        ('people', '0005_add_person_title'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('html_body', models.TextField(verbose_name='HTML body')),
                ('plan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_base_template', to='actions.Plan', verbose_name='plan')),
            ],
            options={
                'verbose_name': 'base template',
                'verbose_name_plural': 'base templates',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('task_late', 'Task is late'), ('task_due_soon', 'Task is due soon'), ('action_not_updated', 'Action metadata has not been updated recently'), ('not_enough_tasks', "Action doesn't have enough in-progress tasks")], db_index=True, max_length=100, unique=True, verbose_name='type')),
                ('base', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='notifications.BaseTemplate')),
            ],
            options={
                'verbose_name': 'notification template',
                'verbose_name_plural': 'notification templates',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SentNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('sent_at', models.DateTimeField()),
                ('type', models.CharField(choices=[('task_late', 'Task is late'), ('task_due_soon', 'Task is due soon'), ('action_not_updated', 'Action metadata has not been updated recently'), ('not_enough_tasks', "Action doesn't have enough in-progress tasks")], max_length=100, verbose_name='type')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='people.Person')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTemplateTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('subject', models.CharField(help_text='Subject for email notifications', max_length=200, verbose_name='subject')),
                ('html_body', models.TextField(help_text='HTML body for email notifications', verbose_name='HTML body')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='notifications.NotificationTemplate')),
            ],
            options={
                'verbose_name': 'notification template Translation',
                'db_table': 'notifications_notificationtemplate_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
